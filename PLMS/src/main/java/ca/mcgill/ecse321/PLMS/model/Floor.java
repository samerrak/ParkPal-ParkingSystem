package ca.mcgill.ecse321.PLMS.model;

import org.hibernate.annotations.OnDelete;
import org.hibernate.annotations.OnDeleteAction;

import jakarta.persistence.*;

/**
 * Class that is part of the domain model of the Parking Lot Management System (PLMS)
 * This class contains information related to each floor
 * 
 * A major part of this class is auto-generated by umple
 * This class is also JPA anotated for ORM
 */
@Entity
public class Floor
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //Floor Attributes
  @Id
  private Integer floorNumber; // each floor is uniquely identified by its floor number
  private int largeSpotCapacity;
  private int smallSpotCapacity;
  private boolean isMemberOnly;

  // association to parking lot
  @ManyToOne
  @OnDelete(action = OnDeleteAction.CASCADE)
  private ParkingLot parkingLot;

  
  /**
   * Default constructor
   */
  public Floor(){}

  /**
   * Constructor of the floor class
   * @param aFloorNumber - floor number
   * @param aLargeSpotCapacity - number of large spots on the floor
   * @param aSmallSpotCapacity - number of small spots on the floor
   * @param aSmallSpotCounter - number of small spots occupied on the floor
   * @param aLargeSpotCounter - number of large spots occupied on the floor
   */
  public Floor(int aFloorNumber, int aLargeSpotCapacity, int aSmallSpotCapacity, boolean aIsMemberOnly){
    this.floorNumber = aFloorNumber;
    this.largeSpotCapacity = aLargeSpotCapacity;
    this.smallSpotCapacity = aSmallSpotCapacity;
    this.isMemberOnly = aIsMemberOnly;
  }
  //------------------------
  // INTERFACE CONSISTING OF GETTERS AND SETTERS
  //------------------------

  public boolean setFloorNumber(int aFloorNumber)
  {
    boolean wasSet = false;
    floorNumber = aFloorNumber;
    wasSet = true;
    return wasSet;
  }

  public boolean setLargeSpotCapacity(int aLargeSpotCapacity)
  {
    boolean wasSet = false;
    largeSpotCapacity = aLargeSpotCapacity;
    wasSet = true;
    return wasSet;
  }

  public boolean setSmallSpotCapacity(int aSmallSpotCapacity)
  {
    boolean wasSet = false;
    smallSpotCapacity = aSmallSpotCapacity;
    wasSet = true;
    return wasSet;
  }

  public int getFloorNumber()
  {
    return floorNumber;
  }

  public int getLargeSpotCapacity()
  {
    return largeSpotCapacity;
  }

  public int getSmallSpotCapacity()
  {
    return smallSpotCapacity;
  }
  
  public boolean getIsMemberOnly()
  {
    return isMemberOnly;
  }

  public void setIsMemberOnly(boolean isMemberOnly)
  {
    this.isMemberOnly = isMemberOnly;
  }

  public boolean setParkingLot(ParkingLot aNewParkingLot)
  {
    boolean wasSet = false;
    if (aNewParkingLot != null)
    {
      parkingLot = aNewParkingLot;
      wasSet = true;
    }
    return wasSet;
  }

  public ParkingLot getParkingLot(){
    return parkingLot;
  }

 /**
 * toString() helper method
 * Helpful for debugging
 */
  public String toString()
  {
    return super.toString() + "["+
            "floorNumber" + ":" + getFloorNumber()+ "," +
            "largeSpotCapacity" + ":" + getLargeSpotCapacity()+ "," +
            "smallSpotCapacity" + ":" + getSmallSpotCapacity();
  }
}